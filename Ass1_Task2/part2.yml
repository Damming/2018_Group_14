---
-hosts: webserver
 remote_user: ubuntu
 sudo: yes
 task:
    #check if the item is update
    -name:check latest packages
     script:apt-get update

    #Moravy
    #Part2 
    #create the postgis Instance
    ---
    db_user:postgres
    db_name: postres
    db_password: postgres_007%
    
    -name: restart postgresql
     service: name=postgresql state=restart
    
    -name: Ensure user has access to the database
     sudo_user: postgres
     postgresql_user: db={{ db_name }}
               name={{ db_user }}
               password={{ db_password }}
               priv=ALL
               state=present
    
    -name: postgis
     sudo: yes
     postgresql_db: name= {{db_name}}
                    encoding  = 'UTF-8'
                    lc_collate= 'en_GB.utf8'
                    lc_ctype  = 'en_GB.utf8'
                    template  = 'template0'
     

    #create the postgis and hstore
    -name: connect gis
     
    -name:postgis and hstore(1)
     command:psql -U postgres -h $HOSTNAME -c "\connect gis"
     tags:
     -Openstreetmap
    
    -name:extension hstore
     command:psql -U postgres -h $HOSTNAME -d gis -c "CREATE EXTENSION {{item}}"
     with_items:
      -hstore
      -fuzzystrmatch
     
    -name:extension postgis
     command:psql -U postgres -h $HOSTNAME -d gis -c "CREATE EXTENSION {{item}}"
     with_items:
      -postgis
     

    #add user and grant access
    
     
    -name: Ensure username=ubuntu has access to the database
     sudo_user: postgres
     postgresql_user:
                db_name:postres
                name:ubuntu
                password: postres_007%
                priv: ALL
     
    -name: give access remotely
     lineinfile:
            path: /etc/postgresql/10/main/pg_hba.conf
            line: 'host all all 0.0.0.0/0 trust'
          
    -name: give access remotely2
     lineinfile:
            path: /etc/postgresql/10/main/postgresql.conf
            line: "listen_addresses = '*'"
    
    
    -name: restart postgresql
     service: name=postgresql state=restart
     
    #Tuning database
    -name: tuing database
     sudo: yes
     lineinfile:
            path: -a /etc/postgresql/10/main/postgresql.conf
            line: {{item}}
     with_items:
        -'shared_buffers = 128MB'
        -'min_wal_size = 80MB'
        -'max_wal_size = 1GB'
        -'work_mem = 4MB'
        -'maintenance_work_mem= 64MB'
        -'autovacuum = off'
        -'fsync = off'
        
    
    #install Osm2pgsql
    -name: add repository
     sudo:yes
     apt_repository: 
            repo:ppa:osmadmins/ppa
            update-cache:yes
            
    -name:install osm
     apt_key:
        keyserver: keyserver.ubuntu.com
        id: A438A16C88C6BE41CB1616B8D57F48750AC4F2CB
    
    -name: update
     sudo: yes
     apt:
        name: "*"
        state:latest
        

    -name:install osm
     apt: 
        name: osm2pgsql
        state: latest
    
    #Openstreetmap auckland
    -name: download oms auckland
     get_url: url=https://raw.githubusercontent.com/Damming/MapData/master/Auckland.osm.pbf dest=~/src/openstreetmap-carto
     
      
    #Load data to postgis
    -name: Load data to postgis(1)
     sysctl:
        name: vm.overcommit_memory
        value: 1
        
    
    -name: Load data to postgis(2)
     shell:HOSTNAME=localhost
     
    
    -name: Load data to postgis(3)
     shell:osm2pgsql -s -C 300 -c -G --hstore --style openstreetmap-carto.style --tag-transform-script openstreetmap-carto.lua -d gis -H $HOSTNAME -U postgres Auckland.osm.pbf
     tags:
      -Openstreetmap
    
    #create indexes and grant Users
    -name: indexes and grantuser
     shell:HOSTNAME=localhost
     
    -name: indexes
     shell: scripts/indexes.py | psql -U postgres -h $HOSTNAME -d gis
     
    -name:grantuser(3)
     get_url: https://raw.githubusercontent.com/openstreetmap/osm2pgsql/master/install-postgis-osm-user.sh
     
      
    -name:grantuser(4)
     file:  dest= ./install-postgis-osm-user.sh mode = a+x
     
     
      
    -name:grantuser(5)
     shell: ./install-postgis-osm-user.sh gis ubuntu
       
      
    #Configure renderd
   
     
    # Install renderd init script by copying the sample init script included in its package
    -name:install renderd
     action: copy src=~/src/mod_tile/debian/renderd.init dest: /etc/init.d/postgresql
     tags:
      -Openstreetmap
    
    -name:install renderd
     shell: dest=/etc/init.d/renderd mode= a+x
     
      
    # Edit the init script file
    -name: edit script
     replace:
        path:/etc/init.d/renderd
        after: 'DAEMON='
        regexp:'(\s+)/usr/local/bin/$NAME(\s+.*)?$'
        backup:yes
     
    -name: edit script
     replace:
        path: /etc/init.d/renderd
        after:'DAEMON_ARGS='
        regexp:'(\s+)"-c /usr/local/etc/renderd.conf"(\s+)'
        backup:yes
        
    -name: edit script
     replace:
        path: /etc/init.d/renderd
        after: 'RUNASUSER='
        regexp: 'ubuntu'
        backup:yes
      
    # renderd
    -name:reload 
     sysctl:
        daemon_reload: yes
    
    -name: start
     sysctl:
        state: started
    
    -name: enable
     sysctl:
        enable: yes
    
      
    # Configure Apache
    
    -name:create file and write into item
     sudo:yes
     file: 
        path:'/etc/apache2/mods-available/mod_tile.load'
        state:touch
        
    -name:write into file
     lineinfile:
            path: '/etc/apache2/mods-available/mod_tile.load'
            line: 'LoadModule tile_module /usr/lib/apache2/modules/mod_tile.so'
            
    -name: symlink
     file: 
        src: '/etc/apache2/mods-enabled/'
        dest: '/etc/apache2/mods-available/mod_tile.load'
        state: link
   
    
    #Edit The default virtual host file
    
    -name: add more lines
     lineinfile:
            dest:/etc/apache2/sites-enabled/000-default.conf
            line: '{{item}}'
     with_items:
        -'LoadTileConfigFile /usr/local/etc/renderd.conf'
        -'ModTileRenderdSocketName /var/run/renderd/renderd.sock'
        -'ModTileRequestTimeout 3'
        -'ModTileMissingRequestTimeout 60'
      
    -name: restart apache2
     script:systemctl restart apache2
     tags:
      -Openstreetmap
    -name: restart apache2
     service:
        name:apache2
        state: restart
     
    #OpenLayers
    -name: get url OpenLayers
     get_url: url=https://raw.githubusercontent.com/Damming/MapData/master/ol.html dest=/var/www/html/
     tags:
      -OpenLayers
      
    #leaflet
    -name: get url leaflet
      get_url: url=https://raw.githubusercontent.com/Damming/MapData/master/lf.html dest=/var/www/html/
      tags: 
       - leaflet
    #renderd time    
    
       
    -name: rendering
     shell:renderd -f -c /usr/local/etc/renderd.conf
     
