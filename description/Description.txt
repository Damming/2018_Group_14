                          Description

Group14 members:
Daming Li-15398736, Moravy Oum-16859528, Yaozu Zhang-15398302, Simon Freeman-13036748

This is a text that describes the entire IT engineering project. It has several parts. In the first part, it introduces the readers to the selection topic of the fourteenth group and an introduction to the topic. In the second part, it introduces the readers to the tasks of the fourteenth group and the techniques to be used to solve the problem and the problems encountered in the task, and the technical introductions are also used when necessary. In the third part, the readers will see the explanation and principles of the various scripts on GitHub.

This is the GitHub web address: https://github.com/Damming/2018_Group_14

First of all, the research topic of the group is Open Street Map. So what is this Open Street Map?
Open Street Map(OSM) is a free open source, editable map service created by the Internet. Open Street Map uses public collective power and unpaid contributions to improve map-related geographic data. OSM is not-for-profit, it returns data to the community for reuse in other products and services. Other maps sell most of the map data to third parties. Maps of OSM are drawn by users based on portable GPS devices, aerial photography photos, other free content, and even local intelligence. The map image and vector data in the website are all shared by the creative name - the same way to share the authorization. [1]

The first step is to create a virtual Ubuntu server on the AWS website, and then all you have to do is configure the server. Here's a tutorial on how to configure Open street map. But the virtual server we use is not as complicated as the one in the tutorial. We only need a part to complete the server configuration.

If the readers wants to see the original installation tutorial, this is the URL: https://ircama.github.io/osm-carto-tutorials/tile-server-ubuntu/. When the configuration server is finished, you can start the first part of the task.

The first Assignment:
Our first task was to automatically configure OSM on an Ubuntu server (First task of Assignment1). Here we need to use a shell script. It uses a variety of commands to be written into a file, which is convenient for one-time execution of a program file, mainly for the administrator to set up or manage. It uses commands under Linux/Unix. [2] Script files for this issue can be found in the Ass1_Task1 folder under GitHub. In this folder, there are two script files called ¡®set_up_OpenStreetMap.sh¡¯ and ¡®set_up_OpenStreetMap_with_password.sh¡¯ . The first script file is about installing the necessary OSM tool kits on an Ubuntu server. There is a specific toolkit name on the note. The second script file is about how to configure the OSM server and build an instance. [3]  

Our second task was to include the setup of the server and use a configuration management tool instead of a shell script. This required Ansible, which is a simple automated operation and maintenance management tool, based on the Python language. It is built by two key modules, Paramiko and PyYAML. It can be used to automate the deployment of applications and configurations, and implements batch system configuration, batch program deployment, batch run commands, etc.[3]

In this section, our main goal is to translate the script files from the previous section into Ansible's playbook format to automatically configure OSM on other Ubuntu servers. The readers can find a playbook file called ¡®prepared_new_instance.yml¡¯ in a folder called Ass1_Task2. This file is important because the playbook file is also modified based on this in the second assignment, which readers will see later. If readers want to what the content is of the playbook, check the notes. 

Next is the second assignment:
Our group chooses the following question:
1.How can your system be upgraded in a safe manner and avoiding downtime?
2.What else would be important in a DevOps approach? 
In the first task, six AWS instances are required. They are 1 assistant server, 1 database server, 3 OpenStreetMap program servers (including 1 backup), and 1 nginx server. Only assistant server needs to be setup manually. The other servers can be setup by Ansible playbook running on the assistant server. Assistant server can also be used to update program server.









Reference:
[1]Open Street Map, Retrieve from https://baike.baidu.com/item/Open%20Street%20Map/11057294.

[2]Shell script, Retrieve from https://baike.baidu.com/item/Shell%E8%84%9A%E6%9C%AC/572265?fr=aladdin.

[3]Ansible, Retrieve from https://www.iyunv.com/thread-385359-1-1.html.
[4]


